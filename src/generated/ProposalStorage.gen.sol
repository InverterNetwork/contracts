// SPDX-License-Identifier: MIT
pragma solidity ^0.8.13;

// THIS FILE IS AUTOGENERATED.
// The import statements may not have accurate paths. Please edit accordingly.

// @todo Had to manually adjust interfaces.

import {IERC20} from "@oz/token/ERC20/IERC20.sol";

contract ProposalStorage {
    uint8 internal __Proposal__initialized;
    bool internal __Proposal__initializing;
    uint256[50] internal __Proposal___gap;
    mapping(address => uint256) internal __Proposal__balances;
    mapping(address => mapping(address => uint256)) internal __Proposal__allowances;
    uint256 internal __Proposal__totalSupply;
    string internal __Proposal__name;
    string internal __Proposal__symbol;
    uint256[45] internal __Proposal___gap_2;
    address internal __Proposal__owner;
    uint256[49] internal __Proposal___gap_3;
    bool internal __Proposal__paused;
    uint256[49] internal __Proposal___gap_4;
    mapping(address => address) internal __Proposal__modules;
    uint256 internal __Proposal__moduleCounter;
    mapping(address => mapping(bytes32 => mapping(address => bool))) internal __Proposal__moduleRoles;
    mapping(address => uint) internal __Proposal__contributorRegistry; // @audit => Contributor struct
    mapping(address => address) internal __Proposal__contributors;
    uint internal __Proposal__contributorCounter;
    IERC20 internal __Proposal__asset; // @audit IERC20MetadataUpgradeable
    uint[49] internal __Proposal___gap_5;
    uint internal __Proposal_proposalId;
    IERC20 internal __Proposal_token;
    address internal __Proposal_authorizer; // @audit IAuthorizer
    address internal __Proposal_paymentProcessor; // @audit IPaymentProcessor
}
